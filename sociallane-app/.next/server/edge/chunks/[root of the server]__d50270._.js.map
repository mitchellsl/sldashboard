{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from '@supabase/ssr';\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport async function middleware(req: NextRequest) {\n  const res = NextResponse.next();\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return req.cookies.get(name)?.value;\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          res.cookies.set({\n            name,\n            value,\n            ...options,\n          });\n        },\n        remove(name: string, options: CookieOptions) {\n          res.cookies.set({\n            name,\n            value: '',\n            ...options,\n          });\n        },\n      },\n    }\n  );\n\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  // If there's no session and the user is trying to access a protected route\n  if (!session && req.nextUrl.pathname !== '/login') {\n    const redirectUrl = req.nextUrl.clone();\n    redirectUrl.pathname = '/login';\n    return NextResponse.redirect(redirectUrl);\n  }\n\n  // If there's a session and the user is on the login page\n  if (session && req.nextUrl.pathname === '/login') {\n    const redirectUrl = req.nextUrl.clone();\n    redirectUrl.pathname = '/';\n    return NextResponse.redirect(redirectUrl);\n  }\n\n  return res;\n}\n\nexport const config = {\n  matcher: ['/((?!_next/static|_next/image|favicon.ico).*)'],\n}; "],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AADA;;;AAIO,eAAe,WAAW,GAAgB;IAC/C,MAAM,MAAM,qLAAA,CAAA,eAAY,CAAC,IAAI;IAE7B,MAAM,WAAW,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGhC;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI,OAAO,CAAC,GAAG,CAAC;oBACd;oBACA;oBACA,GAAG,OAAO;gBACZ;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI,OAAO,CAAC,GAAG,CAAC;oBACd;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;YACF;QACF;IACF;IAGF,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAElC,2EAA2E;IAC3E,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;QACjD,MAAM,cAAc,IAAI,OAAO,CAAC,KAAK;QACrC,YAAY,QAAQ,GAAG;QACvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,yDAAyD;IACzD,IAAI,WAAW,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;QAChD,MAAM,cAAc,IAAI,OAAO,CAAC,KAAK;QACrC,YAAY,QAAQ,GAAG;QACvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAgD;AAC5D"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}