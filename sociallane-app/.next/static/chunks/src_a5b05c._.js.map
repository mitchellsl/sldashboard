{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitch/Desktop/sldashboard/sociallane-app/src/utils/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nexport type SubscriptionFrequency = 'monthly' | 'quarterly' | 'yearly';\nexport type GA4Status = 'yes' | 'yes - basic' | 'no' | 'pending';\n\n// Mapping for Dutch frequency values\nconst frequencyMapping: { [key: string]: SubscriptionFrequency } = {\n  'maandelijks': 'monthly',\n  'per maand': 'monthly',\n  'monthly': 'monthly',\n  'kwartaal': 'quarterly',\n  'per kwartaal': 'quarterly',\n  'quarterly': 'quarterly',\n  'jaarlijks': 'yearly',\n  'per jaar': 'yearly',\n  'yearly': 'yearly'\n};\n\n// Mapping for GA4 status values\nconst ga4StatusMapping: { [key: string]: GA4Status } = {\n  'ja': 'yes',\n  'yes': 'yes',\n  'ja - basic': 'yes - basic',\n  'yes - basic': 'yes - basic',\n  'nee': 'no',\n  'no': 'no',\n  'in behandeling': 'pending',\n  'pending': 'pending'\n};\n\nexport interface Subscription {\n  id: string;\n  client_name: string;\n  frequency: 'monthly' | 'quarterly';\n  wp_theme?: string;\n  php_version?: string;\n  ga4_status: 'yes' | 'no' | 'pending';\n  analytics_check: boolean;\n  last_update: string | null;\n  next_update_due: string | null;\n  comments?: string;\n  comment_updated_at?: string;\n  comment_updated_by?: string;\n  update_status?: 'completed' | 'pending' | 'overdue';\n  updated_by?: string | null;\n  hosting_details?: {\n    host: string;\n    username: string;\n    password: string;\n    port: string;\n  } | null;\n  database_details?: {\n    host: string;\n    databaseName: string;\n    databaseUser: string;\n    password: string;\n  } | null;\n}\n\nexport type UserProfile = {\n  id: string;\n  user_id: string;\n  display_name: string;\n  email: string;\n  avatar_url: string | null;\n  updated_at: string;\n};\n\nfunction normalizeFrequency(value: string): SubscriptionFrequency {\n  const normalized = value?.toLowerCase().trim();\n  return frequencyMapping[normalized] || 'monthly';\n}\n\nfunction normalizeGA4Status(value: string): GA4Status {\n  const normalized = value?.toLowerCase().trim();\n  return ga4StatusMapping[normalized] || 'no';\n}\n\nfunction normalizeBoolean(value: any): boolean {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') {\n    const normalized = value.toLowerCase().trim();\n    return normalized === 'true' || \n           normalized === 'yes' || \n           normalized === 'ja' || \n           normalized === '1' || \n           normalized === 'x' ||\n           normalized === '✓' ||\n           normalized === '✔';\n  }\n  return false;\n}\n\nexport async function importExcelToSupabase(data: any[]): Promise<void> {\n  const { error } = await supabase\n    .from('subscriptions')\n    .insert(data.map(row => ({\n      client_name: row[0]?.trim() || 'Unknown Client',\n      frequency: normalizeFrequency(row[1]),\n      wp_theme: row[2]?.trim() || null,\n      php_version: row[3]?.toString().trim() || null,\n      ga4_status: normalizeGA4Status(row[4]),\n      analytics_check: normalizeBoolean(row[5]),\n      january: normalizeBoolean(row[6]),\n      february: normalizeBoolean(row[7]),\n      march: normalizeBoolean(row[8]),\n      april: normalizeBoolean(row[9]),\n      may: normalizeBoolean(row[10]),\n      june: normalizeBoolean(row[11]),\n      july: normalizeBoolean(row[12]),\n      august: normalizeBoolean(row[13]),\n      september: normalizeBoolean(row[14]),\n      october: normalizeBoolean(row[15]),\n      november: normalizeBoolean(row[16]),\n      december: normalizeBoolean(row[17]),\n      notes: row[18]?.toString().trim() || null\n    })));\n\n  if (error) throw error;\n}\n\nexport async function getSubscriptions() {\n  const { data, error } = await supabase\n    .from('subscriptions')\n    .select('*')\n    .order('client_name', { ascending: true });\n\n  if (error) throw error;\n  return data;\n}\n\nexport async function updateSubscription(id: string, updates: Partial<Subscription>) {\n  // Remove id from updates\n  const { id: _, ...updateData } = updates;\n\n  // Convert hosting_details and database_details to JSONB if they exist\n  const processedUpdates = {\n    ...updateData,\n    hosting_details: updateData.hosting_details ? JSON.stringify(updateData.hosting_details) : null,\n    database_details: updateData.database_details ? JSON.stringify(updateData.database_details) : null,\n  };\n\n  const { data, error } = await supabase\n    .from('subscriptions')\n    .update(processedUpdates)\n    .eq('id', id)\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Supabase update error:', error);\n    throw error;\n  }\n\n  if (!data) {\n    throw new Error('No data returned after update');\n  }\n\n  return data;\n}\n\nexport async function deleteSubscription(id: string) {\n  const { error } = await supabase\n    .from('subscriptions')\n    .delete()\n    .eq('id', id);\n\n  if (error) throw error;\n}\n\nexport async function updateUserProfile(userId: string, updates: Partial<UserProfile>) {\n  // First check if profile exists\n  const { data: existingProfile } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single();\n\n  const profileData = {\n    user_id: userId,\n    ...(!existingProfile && {\n      display_name: '',\n      email: '',\n      avatar_url: null,\n    }),\n    ...updates,\n    updated_at: new Date().toISOString()\n  };\n\n  const { data, error } = await supabase\n    .from('profiles')\n    .upsert(profileData)\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Error updating profile:', error);\n    throw new Error(`Failed to update profile: ${error.message}`);\n  }\n\n  return data;\n}\n\nexport async function getUserProfile(userId: string) {\n  const { data, error } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single();\n\n  if (error) {\n    // If profile doesn't exist, return null instead of throwing\n    if (error.code === 'PGRST116') {\n      return null;\n    }\n    console.error('Error fetching profile:', error);\n    throw new Error(`Failed to fetch profile: ${error.message}`);\n  }\n\n  return data;\n}\n\nexport async function uploadAvatar(userId: string, file: File) {\n  try {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${userId}-${Math.random()}.${fileExt}`;\n    const filePath = `avatars/${fileName}`;\n\n    const { error: uploadError } = await supabase.storage\n      .from('avatars')\n      .upload(filePath, file);\n\n    if (uploadError) {\n      throw uploadError;\n    }\n\n    const { data: { publicUrl } } = supabase.storage\n      .from('avatars')\n      .getPublicUrl(filePath);\n\n    await updateUserProfile(userId, { avatar_url: publicUrl });\n\n    return publicUrl;\n  } catch (error) {\n    console.error(`Error uploading avatar: ${error}`);\n    throw new Error('Failed to upload avatar. Please try again.');\n  }\n}\n\nexport async function createSubscription(subscription: Omit<Subscription, 'id'>): Promise<Subscription> {\n  const { data, error } = await supabase\n    .from('subscriptions')\n    .insert([{\n      ...subscription,\n      hosting_details: subscription.hosting_details ? JSON.stringify(subscription.hosting_details) : null,\n      database_details: subscription.database_details ? JSON.stringify(subscription.database_details) : null,\n    }])\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Error creating subscription:', error);\n    throw error;\n  }\n\n  if (!data) {\n    throw new Error('No data returned after creation');\n  }\n\n  return data;\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitch/Desktop/sldashboard/sociallane-app/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { Subscription, getSubscriptions, updateSubscription, deleteSubscription, createSubscription } from '@/utils/supabase';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { UserProfile, getUserProfile, updateUserProfile, uploadAvatar } from '@/utils/supabase';\nimport { User } from '@supabase/supabase-js';\nimport { HostingDetails, DatabaseDetails } from \"@/types/hosting\";\nimport { supabase } from '@/utils/supabase';\n\ntype SortField = 'client_name' | 'frequency' | 'wp_theme' | 'php_version' | 'ga4_status';\ntype SortDirection = 'asc' | 'desc';\n\ntype UpdateHistory = {\n  client_name: string;\n  last_update: string;\n  updated_by: string;\n  frequency: 'monthly' | 'quarterly';\n  update_status: 'completed' | 'pending' | 'overdue';\n};\n\nexport default function Home() {\n  const [subscriptions, setSubscriptions] = useState<Subscription[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [activeView, setActiveView] = useState('overview');\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const months = [\n    'Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni', \n    'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'\n  ];\n  \n  // Add new state for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortField, setSortField] = useState<SortField>('client_name');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [editingSubscription, setEditingSubscription] = useState<Subscription | null>(null);\n  const [originalSubscription, setOriginalSubscription] = useState<Subscription | null>(null);\n  const { signOut, user } = useAuth();\n\n  // Add new state for analytics\n  const [updateHistory, setUpdateHistory] = useState<UpdateHistory[]>([]);\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'week' | 'month' | 'year'>('month');\n\n  // Add new state for user profile\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [isProfileLoading, setIsProfileLoading] = useState(false);\n  const [profileError, setProfileError] = useState<string | null>(null);\n\n  // Add new state for table collapse\n  const [isMonthlyCollapsed, setIsMonthlyCollapsed] = useState(false);\n  const [isQuarterlyCollapsed, setIsQuarterlyCollapsed] = useState(false);\n  const [isUpdatesProgressCollapsed, setIsUpdatesProgressCollapsed] = useState(false);\n  const [isMonthsModalOpen, setIsMonthsModalOpen] = useState(false);\n\n  // Add new state for hosting and database details\n  const [activeTab, setActiveTab] = useState(\"general\");\n  const [hostingDetails, setHostingDetails] = useState<HostingDetails>({\n    host: editingSubscription?.hosting_details?.host || \"\",\n    username: editingSubscription?.hosting_details?.username || \"\",\n    password: editingSubscription?.hosting_details?.password || \"\",\n    port: editingSubscription?.hosting_details?.port || \"\",\n  });\n\n  const [databaseDetails, setDatabaseDetails] = useState<DatabaseDetails>({\n    host: editingSubscription?.database_details?.host || \"\",\n    databaseName: editingSubscription?.database_details?.databaseName || \"\",\n    databaseUser: editingSubscription?.database_details?.databaseUser || \"\",\n    password: editingSubscription?.database_details?.password || \"\",\n  });\n\n  // Add new state for updates modal\n  const [isUpdatesModalOpen, setIsUpdatesModalOpen] = useState(false);\n  const [selectedSubscriptionId, setSelectedSubscriptionId] = useState<string | null>(null);\n\n  // Add new state for new client modal\n  const [isNewClientModalOpen, setIsNewClientModalOpen] = useState(false);\n  const [newSubscription, setNewSubscription] = useState<Omit<Subscription, 'id'>>({\n    client_name: '',\n    frequency: 'monthly',\n    wp_theme: '',\n    php_version: '',\n    ga4_status: 'no',\n    analytics_check: false,\n    last_update: null,\n    next_update_due: null,\n    comments: '',\n    hosting_details: {\n      host: '',\n      username: '',\n      password: '',\n      port: ''\n    },\n    database_details: {\n      host: '',\n      databaseName: '',\n      databaseUser: '',\n      password: ''\n    }\n  });\n\n  const [newClientActiveTab, setNewClientActiveTab] = useState(\"general\");\n\n  useEffect(() => {\n    fetchSubscriptions();\n    if (user) {\n      fetchUserProfile();\n    }\n  }, [user]);\n\n  // Add sort function\n  const handleSort = (field: SortField) => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Add filter and sort logic\n  const filteredAndSortedSubscriptions = subscriptions\n    .filter(subscription => {\n      const searchLower = searchTerm.toLowerCase();\n      return (\n        subscription.client_name.toLowerCase().includes(searchLower) ||\n        subscription.frequency.toLowerCase().includes(searchLower) ||\n        subscription.wp_theme?.toLowerCase().includes(searchLower) ||\n        subscription.php_version?.toLowerCase().includes(searchLower) ||\n        subscription.ga4_status.toLowerCase().includes(searchLower)\n      );\n    })\n    .sort((a, b) => {\n      const aValue = a[sortField] || '';\n      const bValue = b[sortField] || '';\n      const compareResult = aValue.localeCompare(bValue);\n      return sortDirection === 'asc' ? compareResult : -compareResult;\n    });\n\n  // Add function to calculate update status\n  const calculateUpdateStatus = (subscription: Subscription) => {\n    const today = new Date();\n    const lastUpdate = subscription.last_update ? new Date(subscription.last_update) : null;\n    const nextDue = subscription.next_update_due ? new Date(subscription.next_update_due) : null;\n\n    if (!lastUpdate || !nextDue) return 'pending';\n    if (nextDue < today) return 'overdue';\n    if (lastUpdate <= nextDue) return 'completed';\n    return 'pending';\n  };\n\n  // Add function to get next update date\n  const calculateNextUpdate = (subscription: Subscription) => {\n    const today = new Date();\n    const lastUpdate = subscription.last_update ? new Date(subscription.last_update) : today;\n    \n    if (subscription.frequency === 'monthly') {\n      return new Date(lastUpdate.setMonth(lastUpdate.getMonth() + 1));\n    } else {\n      return new Date(lastUpdate.setMonth(lastUpdate.getMonth() + 3));\n    }\n  };\n\n  // Add function to format date\n  const formatDate = (date: Date | string | null) => {\n    if (!date) return '-';\n    return new Date(date).toLocaleDateString('nl-NL', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  // Add function to get pending updates for selected month\n  const getPendingUpdates = () => {\n    return subscriptions.filter(subscription => {\n      const nextUpdate = subscription.next_update_due ? new Date(subscription.next_update_due) : null;\n      if (!nextUpdate) return false;\n      \n      // Only check if the update is due in the selected month\n      return nextUpdate.getMonth() === selectedMonth;\n    });\n  };\n\n  // Add function to mark update as completed\n  const markUpdateAsCompleted = async (subscriptionId: string) => {\n    const subscription = subscriptions.find(s => s.id === subscriptionId);\n    if (!subscription) return;\n\n    try {\n      const nextUpdateDate = calculateNextUpdate({\n        ...subscription,\n        last_update: new Date().toISOString()\n      });\n\n      const updates = {\n        ...subscription,\n        last_update: new Date().toISOString(),\n        next_update_due: nextUpdateDate.toISOString(),\n        update_status: 'completed' as const,\n        updated_by: user?.id || null\n      };\n\n      await updateSubscription(subscriptionId, updates);\n      \n      // Update local state immediately\n      setSubscriptions(prevSubscriptions => \n        prevSubscriptions.map(sub => \n          sub.id === subscriptionId ? { ...sub, ...updates } : sub\n        )\n      );\n\n      // Close modal if no more pending updates\n      const remainingUpdates = getPendingUpdates().filter(s => s.id !== subscriptionId);\n      if (remainingUpdates.length === 0) {\n        setIsUpdatesModalOpen(false);\n      }\n    } catch (err) {\n      console.error('Error marking update as completed:', err);\n      setError(err instanceof Error ? err.message : 'Failed to mark update as completed');\n    }\n  };\n\n  // Add function to get updates count for a specific month\n  const getMonthUpdatesCount = (month: number) => {\n    return subscriptions.filter(subscription => {\n      const nextUpdate = subscription.next_update_due ? new Date(subscription.next_update_due) : null;\n      return nextUpdate?.getMonth() === month;\n    }).reduce((counts, subscription) => {\n      const status = subscription.update_status || 'pending';\n      counts[status] = (counts[status] || 0) + 1;\n      return counts;\n    }, {} as Record<string, number>);\n  };\n\n  async function fetchSubscriptions() {\n    try {\n      const data = await getSubscriptions();\n      setSubscriptions(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch subscriptions');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleFileUpload(event: React.ChangeEvent<HTMLInputElement>) {\n    const file = event.target.files?.[0];\n    if (!file) return;\n    setSelectedFile(file);\n  }\n\n  async function handleImport() {\n    if (!selectedFile) return;\n\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      const response = await fetch('/api/import', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) throw new Error('Import failed');\n      await fetchSubscriptions();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Import failed');\n    } finally {\n      setLoading(false);\n      setSelectedFile(null);\n    }\n  }\n\n  // Add edit handler\n  const handleEdit = (subscription: Subscription) => {\n    setOriginalSubscription(subscription);\n    setEditingSubscription(subscription);\n    setIsEditModalOpen(true);\n  };\n\n  // Modify handleSave to include update tracking\n  const handleSave = async () => {\n    if (!editingSubscription || !originalSubscription) return;\n\n    try {\n      setLoading(true);\n      \n      const nextUpdateDate = calculateNextUpdate({\n        ...editingSubscription,\n        last_update: new Date().toISOString()\n      });\n\n      // Create the update object\n      const updates: Partial<Subscription> = {\n        ...editingSubscription,\n        hosting_details: {\n          host: hostingDetails.host,\n          username: hostingDetails.username,\n          password: hostingDetails.password,\n          port: hostingDetails.port\n        },\n        database_details: {\n          host: databaseDetails.host,\n          databaseName: databaseDetails.databaseName,\n          databaseUser: databaseDetails.databaseUser,\n          password: databaseDetails.password\n        },\n        last_update: new Date().toISOString(),\n        next_update_due: nextUpdateDate.toISOString(),\n        updated_by: user?.id || null\n      };\n\n      console.log('Sending update data:', updates);\n\n      // Use the updateSubscription function\n      const updatedData = await updateSubscription(editingSubscription.id, updates);\n      \n      console.log('Update successful:', updatedData);\n\n      // Refresh and close\n      await fetchSubscriptions();\n      setIsEditModalOpen(false);\n      setEditingSubscription(null);\n      setOriginalSubscription(null);\n\n    } catch (err) {\n      console.error('Save error details:', err);\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Failed to update subscription');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add analytics content\n  const renderAnalyticsView = () => {\n    const getTimeframeLabel = () => {\n      switch (selectedTimeframe) {\n        case 'week': return 'This Week';\n        case 'month': return 'This Month';\n        case 'year': return 'This Year';\n      }\n    };\n\n    const totalUpdates = subscriptions.filter(s => s.last_update).length;\n    const completedUpdates = subscriptions.filter(s => s.update_status === 'completed').length;\n    const pendingUpdates = subscriptions.filter(s => s.update_status === 'pending').length;\n    const overdueUpdates = subscriptions.filter(s => s.update_status === 'overdue').length;\n\n    return (\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Update Statistics Card */}\n        <div className=\"card p-6 lg:col-span-2\">\n          <h2 className=\"text-lg font-semibold mb-6\">Update Statistics</h2>\n          <div className=\"grid grid-cols-4 gap-4\">\n            <div className=\"bg-gray-800 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold\">{totalUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Total Updates</div>\n            </div>\n            <div className=\"bg-green-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-green-400\">{completedUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Completed</div>\n            </div>\n            <div className=\"bg-yellow-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-yellow-400\">{pendingUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Pending</div>\n            </div>\n            <div className=\"bg-red-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-red-400\">{overdueUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Overdue</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Update Timeline */}\n        <div className=\"card p-6 lg:col-span-2\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-lg font-semibold\">Update Timeline</h2>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => setSelectedTimeframe('week')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'week' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Week\n              </button>\n              <button\n                onClick={() => setSelectedTimeframe('month')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'month' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Month\n              </button>\n              <button\n                onClick={() => setSelectedTimeframe('year')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'year' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Year\n              </button>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"border-b border-gray-700\">\n                <tr>\n                  <th className=\"text-left py-3 text-gray-400\">Client</th>\n                  <th className=\"text-left py-3 text-gray-400\">Last Update</th>\n                  <th className=\"text-left py-3 text-gray-400\">Updated By</th>\n                  <th className=\"text-left py-3 text-gray-400\">Frequency</th>\n                  <th className=\"text-left py-3 text-gray-400\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {subscriptions\n                  .filter(s => s.last_update)\n                  .sort((a, b) => new Date(b.last_update!).getTime() - new Date(a.last_update!).getTime())\n                  .map((subscription) => (\n                    <tr key={subscription.id} className=\"border-b border-gray-700\">\n                      <td className=\"py-3\">{subscription.client_name}</td>\n                      <td className=\"py-3\">{formatDate(subscription.last_update)}</td>\n                      <td className=\"py-3\">\n                        <div className=\"flex items-center gap-2\">\n                          {subscription.updated_by && (\n                            <>\n                              <img \n                                src={subscription.updated_by === user?.id && userProfile?.avatar_url ? userProfile.avatar_url : '/default-avatar.svg'} \n                                alt=\"User Avatar\"\n                                className=\"w-6 h-6 rounded-full bg-gray-700\"\n                              />\n                              <span>\n                                {subscription.updated_by === user?.id && userProfile\n                                  ? userProfile.display_name\n                                  : 'Admin'}\n                              </span>\n                            </>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"py-3\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          subscription.frequency === 'monthly' ? 'bg-purple-500/20 text-purple-400' : 'bg-yellow-500/20 text-yellow-400'\n                        }`}>\n                          {subscription.frequency}\n                        </span>\n                      </td>\n                      <td className=\"py-3\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          subscription.update_status === 'completed' ? 'bg-green-500/20 text-green-400' :\n                          subscription.update_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n                          'bg-red-500/20 text-red-400'\n                        }`}>\n                          {subscription.update_status || 'pending'}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Replace settings view with profile view\n  const renderProfileView = () => {\n    if (isProfileLoading) return <div className=\"flex items-center justify-center\">Loading profile...</div>;\n    if (!userProfile) return <div className=\"flex items-center justify-center\">No profile found</div>;\n\n    return (\n      <div className=\"card p-6 max-w-2xl mx-auto\">\n        <h2 className=\"text-lg font-semibold mb-6\">Profile Settings</h2>\n        \n        {profileError && (\n          <div className=\"bg-red-500/20 text-red-400 p-4 rounded-lg mb-6\">\n            {profileError}\n          </div>\n        )}\n\n        <div className=\"space-y-6\">\n          {/* Avatar Upload */}\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <img\n                src={userProfile.avatar_url || '/default-avatar.png'}\n                alt={userProfile.display_name || 'Profile'}\n                className=\"w-20 h-20 rounded-full object-cover\"\n              />\n              <label\n                htmlFor=\"avatar-upload\"\n                className=\"absolute bottom-0 right-0 bg-purple-500 p-1 rounded-full cursor-pointer hover:bg-purple-600 transition-colors\"\n              >\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                <input\n                  type=\"file\"\n                  id=\"avatar-upload\"\n                  accept=\"image/*\"\n                  onChange={handleAvatarUpload}\n                  className=\"hidden\"\n                />\n              </label>\n            </div>\n            <div>\n              <h3 className=\"font-medium\">Profile Picture</h3>\n              <p className=\"text-sm text-gray-400\">Click the plus icon to upload a new photo</p>\n            </div>\n          </div>\n\n          {/* Display Name */}\n          <div>\n            <label className=\"block text-sm text-gray-400 mb-1\">Display Name</label>\n            <input\n              type=\"text\"\n              value={userProfile.display_name}\n              onChange={(e) => handleProfileUpdate({ display_name: e.target.value })}\n              className=\"w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-700 focus:outline-none focus:border-purple-500\"\n              placeholder=\"Enter your display name\"\n            />\n          </div>\n\n          {/* Email */}\n          <div>\n            <label className=\"block text-sm text-gray-400 mb-1\">Email Address</label>\n            <input\n              type=\"email\"\n              value={userProfile.email}\n              onChange={(e) => handleProfileUpdate({ email: e.target.value })}\n              className=\"w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-700 focus:outline-none focus:border-purple-500\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n\n          <div className=\"pt-4\">\n            <p className=\"text-sm text-gray-400\">\n              Last updated: {formatDate(userProfile.updated_at)}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const fetchUserProfile = async () => {\n    if (!user) return;\n    \n    try {\n      setIsProfileLoading(true);\n      const profile = await getUserProfile(user.id);\n      setUserProfile(profile || {\n        user_id: user.id,\n        display_name: '',\n        email: user.email || '',\n        avatar_url: null,\n        updated_at: new Date().toISOString()\n      });\n    } catch (err) {\n      console.error('Error fetching profile:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to fetch profile');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  const handleProfileUpdate = async (updates: Partial<UserProfile>) => {\n    if (!user) return;\n    \n    try {\n      setIsProfileLoading(true);\n      setProfileError(null);\n      const updatedProfile = await updateUserProfile(user.id, updates);\n      setUserProfile(updatedProfile);\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to update profile');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  const handleAvatarUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!user || !event.target.files?.[0]) return;\n    \n    try {\n      setIsProfileLoading(true);\n      setProfileError(null);\n      const file = event.target.files[0];\n      const avatarUrl = await uploadAvatar(user.id, file);\n      setUserProfile(prev => prev ? { ...prev, avatar_url: avatarUrl } : null);\n    } catch (err) {\n      console.error('Error uploading avatar:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to upload avatar');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  // Add function to handle new client creation\n  const handleCreateClient = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Calculate next update date if last_update is set\n      if (newSubscription.last_update) {\n        const nextUpdateDate = calculateNextUpdate({\n          ...newSubscription,\n          id: 'temp'\n        });\n        newSubscription.next_update_due = nextUpdateDate.toISOString();\n      }\n\n      await createSubscription(newSubscription);\n      await fetchSubscriptions();\n      setIsNewClientModalOpen(false);\n      \n      // Reset the form\n      setNewSubscription({\n        client_name: '',\n        frequency: 'monthly',\n        wp_theme: '',\n        php_version: '',\n        ga4_status: 'no',\n        analytics_check: false,\n        last_update: null,\n        next_update_due: null,\n        comments: '',\n        hosting_details: {\n          host: '',\n          username: '',\n          password: '',\n          port: ''\n        },\n        database_details: {\n          host: '',\n          databaseName: '',\n          databaseUser: '',\n          password: ''\n        }\n      });\n    } catch (err) {\n      console.error('Error creating client:', err);\n      setError(err instanceof Error ? err.message : 'Failed to create client');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add handlers for updating details\n  const updateHostingDetails = (field: keyof HostingDetails, value: string) => {\n    setNewSubscription(prev => ({\n      ...prev,\n      hosting_details: {\n        ...prev.hosting_details!,\n        [field]: value\n      }\n    }));\n  };\n\n  const updateDatabaseDetails = (field: keyof DatabaseDetails, value: string) => {\n    setNewSubscription(prev => ({\n      ...prev,\n      database_details: {\n        ...prev.database_details!,\n        [field]: value\n      }\n    }));\n  };\n\n  if (loading) return <div className=\"flex items-center justify-center min-h-screen\">Loading...</div>;\n  if (error) return <div className=\"flex items-center justify-center min-h-screen text-red-500\">Error: {error}</div>;\n\n  const monthlyClients = subscriptions.filter(s => s.frequency === 'monthly').length;\n  const quarterlyClients = subscriptions.filter(s => s.frequency === 'quarterly').length;\n  const totalClients = monthlyClients + quarterlyClients;\n\n  return (\n    <div className=\"min-h-screen bg-[#0F1115] text-white p-6\">\n      {/* Header */}\n      <header className=\"flex justify-between items-center mb-8 card p-4\">\n        <div className=\"text-2xl font-bold\">Sociallane Dashboard</div>\n        <div className=\"flex items-center gap-6\">\n          <nav className=\"flex space-x-4\">\n            <button \n              className={`nav-item ${activeView === 'overview' ? 'active' : ''}`}\n              onClick={() => setActiveView('overview')}\n            >\n              Overzicht\n            </button>\n            <button \n              className={`nav-item ${activeView === 'analytics' ? 'active' : ''}`}\n              onClick={() => setActiveView('analytics')}\n            >\n              Analyses\n            </button>\n            <button \n              className={`nav-item ${activeView === 'profile' ? 'active' : ''}`}\n              onClick={() => setActiveView('profile')}\n            >\n              Profiel\n            </button>\n          </nav>\n          {userProfile?.avatar_url && (\n            <img\n              src={userProfile.avatar_url}\n              alt={userProfile.display_name}\n              className=\"w-8 h-8 rounded-full ring-2 ring-purple-500/30\"\n            />\n          )}\n          <button\n            onClick={signOut}\n            className=\"glass-button px-4 py-2 rounded-lg\"\n          >\n            Uitloggen\n          </button>\n        </div>\n      </header>\n\n      {/* Content based on active view */}\n      {activeView === 'overview' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Calendar Card */}\n          <div className=\"card p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-lg font-semibold\">Maand Selectie</h2>\n              <button\n                onClick={() => setIsUpdatesModalOpen(true)}\n                className=\"glass-button px-4 py-2 rounded-lg flex items-center gap-2\"\n              >\n                <span>Bekijk Updates</span>\n                {getPendingUpdates().length > 0 && (\n                  <span className=\"bg-purple-500 text-white px-2 py-0.5 rounded-full text-xs\">\n                    {getPendingUpdates().length}\n                  </span>\n                )}\n              </button>\n            </div>\n            <div className=\"grid grid-cols-7 gap-2\">\n              {months.map((month, index) => {\n                const counts = getMonthUpdatesCount(index);\n                return (\n                  <button\n                    key={month}\n                    className={`p-2 rounded-lg text-center relative ${\n                      selectedMonth === index \n                        ? 'bg-purple-500 text-white' \n                        : 'hover:bg-gray-700'\n                    }`}\n                    onClick={() => setSelectedMonth(index)}\n                  >\n                    {/* Update Badges */}\n                    <div className=\"absolute top-0.5 right-0.5 flex flex-col gap-1\">\n                      {/* Open Updates (Pending + Overdue) */}\n                      {(counts.pending || 0) + (counts.overdue || 0) > 0 && (\n                        <span className=\"bg-yellow-500 text-white text-xs rounded-full px-1.5 py-0.5 flex items-center justify-center\" \n                              title={`${(counts.pending || 0) + (counts.overdue || 0)} open updates`}\n                        >\n                          {(counts.pending || 0) + (counts.overdue || 0)}\n                        </span>\n                      )}\n                      {/* Completed Updates */}\n                      {(counts.completed || 0) > 0 && (\n                        <span className=\"bg-green-500 text-white text-xs rounded-full px-1.5 py-0.5 flex items-center justify-center\" \n                              title={`${counts.completed} completed updates`}\n                        >\n                          {counts.completed}\n                        </span>\n                      )}\n                    </div>\n                    <span>{month}</span>\n                  </button>\n                );\n              })}\n            </div>\n            <div className=\"flex justify-end mt-4 gap-4 text-sm text-gray-400\">\n              <div className=\"flex items-center gap-1\">\n                <span className=\"px-1.5 py-0.5 rounded-full bg-yellow-500 flex items-center justify-center text-xs text-white\">2</span>\n                <span>Open Updates</span>\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <span className=\"px-1.5 py-0.5 rounded-full bg-green-500 flex items-center justify-center text-xs text-white\">1</span>\n                <span>Completed</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Client Distribution */}\n          <div className=\"grid grid-cols-2 gap-6\">\n            <div className=\"card p-6\">\n              <h2 className=\"text-lg font-semibold mb-6\">Abonnementsverdeling</h2>\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-400\">Maandelijks</span>\n                    <span className=\"text-sm text-purple-500\">{Math.round(monthlyClients/totalClients*100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                    <div \n                      className=\"bg-purple-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${Math.round(monthlyClients/totalClients*100)}%` }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-400\">Per kwartaal</span>\n                    <span className=\"text-sm text-yellow-500\">{Math.round(quarterlyClients/totalClients*100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                    <div \n                      className=\"bg-yellow-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${Math.round(quarterlyClients/totalClients*100)}%` }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"mt-4 flex justify-between text-sm text-gray-400\">\n                  <div>Totaal klanten: {totalClients}</div>\n                  <div className=\"flex gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                      <span>{monthlyClients} Maandelijks</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                      <span>{quarterlyClients} Per kwartaal</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Monthly Updates Progress */}\n            <div className=\"card p-6\">\n              <h2 \n                className=\"text-lg font-semibold mb-6 flex items-center justify-between cursor-pointer select-none\"\n                onClick={() => setIsUpdatesProgressCollapsed(!isUpdatesProgressCollapsed)}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <span>Updates Deze Maand</span>\n                  <svg \n                    className={`w-5 h-5 transition-transform ${isUpdatesProgressCollapsed ? '-rotate-90' : ''}`} \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </div>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setIsMonthsModalOpen(true);\n                  }}\n                  className=\"text-sm text-purple-400 hover:text-purple-300\"\n                >\n                  Bekijk Alle Maanden\n                </button>\n              </h2>\n              <div className={`transition-all duration-300`}>\n                <div className={`${isUpdatesProgressCollapsed ? 'space-y-4' : 'max-h-[400px] overflow-y-auto pr-2 space-y-4 custom-scrollbar'}`}>\n                  {months.slice(\n                    isUpdatesProgressCollapsed ? new Date().getMonth() : 0,\n                    isUpdatesProgressCollapsed ? new Date().getMonth() + 2 : months.length\n                  ).map((month, index) => {\n                    const actualIndex = isUpdatesProgressCollapsed ? new Date().getMonth() + index : index;\n                    const monthlySubscriptions = subscriptions.filter(s => {\n                      const nextUpdate = s.next_update_due ? new Date(s.next_update_due) : null;\n                      return nextUpdate && \n                             nextUpdate.getMonth() === actualIndex && \n                             s.frequency === 'monthly';\n                    });\n\n                    const quarterlySubscriptions = subscriptions.filter(s => {\n                      const nextUpdate = s.next_update_due ? new Date(s.next_update_due) : null;\n                      return nextUpdate && \n                             nextUpdate.getMonth() === actualIndex && \n                             s.frequency === 'quarterly';\n                    });\n\n                    const monthlyRequired = monthlySubscriptions.length;\n                    const quarterlyRequired = quarterlySubscriptions.length;\n                    const monthlyCompleted = monthlySubscriptions.filter(s => s.update_status === 'completed').length;\n                    const quarterlyCompleted = quarterlySubscriptions.filter(s => s.update_status === 'completed').length;\n                    const monthlyPercentage = monthlyRequired > 0 ? Math.round((monthlyCompleted / monthlyRequired) * 100) : 0;\n                    const quarterlyPercentage = quarterlyRequired > 0 ? Math.round((quarterlyCompleted / quarterlyRequired) * 100) : 0;\n\n                    return (\n                      <div key={month} className=\"space-y-3\">\n                        <div className=\"text-sm text-gray-400 font-medium flex justify-between\">\n                          <span>{month}</span>\n                          <span className=\"text-xs\">\n                            {monthlyRequired + quarterlyRequired} updates nodig\n                          </span>\n                        </div>\n                        {/* Monthly Progress */}\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-xs text-gray-400\">\n                              Maandelijks ({monthlyCompleted}/{monthlyRequired})\n                            </span>\n                            <span className={`text-xs ${monthlyPercentage >= 70 ? 'text-green-500' : monthlyPercentage >= 30 ? 'text-yellow-500' : 'text-red-500'}`}>\n                              {monthlyPercentage}%\n                            </span>\n                          </div>\n                          <div className=\"w-full bg-gray-800 rounded-full h-1.5\">\n                            <div \n                              className={`h-1.5 rounded-full transition-all duration-500 ${\n                                monthlyPercentage >= 70 ? 'bg-green-500' : \n                                monthlyPercentage >= 30 ? 'bg-yellow-500' : \n                                'bg-red-500'\n                              }`}\n                              style={{ width: `${monthlyPercentage}%` }}\n                            />\n                          </div>\n                        </div>\n                        {/* Quarterly Progress */}\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-xs text-gray-400\">\n                              Kwartaal ({quarterlyCompleted}/{quarterlyRequired})\n                            </span>\n                            <span className={`text-xs ${quarterlyPercentage >= 70 ? 'text-green-500' : quarterlyPercentage >= 30 ? 'text-yellow-500' : 'text-red-500'}`}>\n                              {quarterlyPercentage}%\n                            </span>\n                          </div>\n                          <div className=\"w-full bg-gray-800 rounded-full h-1.5\">\n                            <div \n                              className={`h-1.5 rounded-full transition-all duration-500 ${\n                                quarterlyPercentage >= 70 ? 'bg-green-500' : \n                                quarterlyPercentage >= 30 ? 'bg-yellow-500' : \n                                'bg-red-500'\n                              }`}\n                              style={{ width: `${quarterlyPercentage}%` }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Client Tables */}\n          <div className=\"card p-6 lg:col-span-2\">\n            <div className=\"flex flex-col gap-8\">\n              {/* Common Header with Search, Import, and New Client */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-lg font-semibold\">Alle Klanten</h2>\n                <div className=\"flex gap-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Zoek klanten...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"glass-input px-4 py-2 rounded-lg\"\n                  />\n                  <button\n                    onClick={() => setIsNewClientModalOpen(true)}\n                    className=\"glass-button px-4 py-2 rounded-lg\"\n                  >\n                    Nieuwe Klant\n                  </button>\n                  <input\n                    type=\"file\"\n                    accept=\".xlsx,.xls\"\n                    onChange={handleFileUpload}\n                    className=\"hidden\"\n                    id=\"file-upload\"\n                  />\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"glass-button px-4 py-2 rounded-lg cursor-pointer\"\n                  >\n                    Importeer Excel\n                  </label>\n                  {selectedFile && (\n                    <button\n                      onClick={handleImport}\n                      disabled={loading}\n                      className=\"glass-button px-4 py-2 rounded-lg disabled:opacity-50\"\n                    >\n                      Uploaden\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Monthly Clients Section */}\n              <div className=\"card p-6 mb-6\">\n                <h3 \n                  className=\"text-lg font-semibold mb-4 flex items-center gap-2 cursor-pointer select-none\"\n                  onClick={() => setIsMonthlyCollapsed(!isMonthlyCollapsed)}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                    <span>Maandelijkse Klanten ({filteredAndSortedSubscriptions.filter(s => s.frequency === 'monthly').length})</span>\n                  </div>\n                  <svg \n                    className={`w-5 h-5 transition-transform ${isMonthlyCollapsed ? '-rotate-90' : ''}`} \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </h3>\n                <div className={`overflow-x-auto transition-all duration-300 ${isMonthlyCollapsed ? 'hidden' : 'block'}`}>\n                  <table className=\"w-full\">\n                    <thead className=\"border-b border-gray-700\">\n                      <tr>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('client_name')}\n                        >\n                          Klantnaam {sortField === 'client_name' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('wp_theme')}\n                        >\n                          WP Thema {sortField === 'wp_theme' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('php_version')}\n                        >\n                          PHP Versie {sortField === 'php_version' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('ga4_status')}\n                        >\n                          GA4 {sortField === 'ga4_status' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th className=\"text-left py-3 text-gray-400\">Analytics</th>\n                        <th className=\"text-left py-3 text-gray-400\">Laatste Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Volgende Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Status</th>\n                        <th className=\"text-left py-3 text-gray-400\">Opmerkingen</th>\n                        <th className=\"text-left py-3 text-gray-400\">Acties</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredAndSortedSubscriptions\n                        .filter(subscription => subscription.frequency === 'monthly')\n                        .map((subscription) => (\n                          <ClientRow \n                            key={subscription.id} \n                            subscription={subscription}\n                            onEdit={handleEdit}\n                            onDelete={deleteSubscription}\n                            formatDate={formatDate}\n                            user={user}\n                            fetchSubscriptions={fetchSubscriptions}\n                          />\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Quarterly Clients Section */}\n              <div className=\"card p-6\">\n                <h3 \n                  className=\"text-lg font-semibold mb-4 flex items-center gap-2 cursor-pointer select-none\"\n                  onClick={() => setIsQuarterlyCollapsed(!isQuarterlyCollapsed)}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                    <span>Kwartaal Klanten ({filteredAndSortedSubscriptions.filter(s => s.frequency === 'quarterly').length})</span>\n                  </div>\n                  <svg \n                    className={`w-5 h-5 transition-transform ${isQuarterlyCollapsed ? '-rotate-90' : ''}`} \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </h3>\n                <div className={`overflow-x-auto transition-all duration-300 ${isQuarterlyCollapsed ? 'hidden' : 'block'}`}>\n                  <table className=\"w-full\">\n                    <thead className=\"border-b border-gray-700\">\n                      <tr>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('client_name')}\n                        >\n                          Klantnaam {sortField === 'client_name' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('wp_theme')}\n                        >\n                          WP Thema {sortField === 'wp_theme' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('php_version')}\n                        >\n                          PHP Versie {sortField === 'php_version' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('ga4_status')}\n                        >\n                          GA4 {sortField === 'ga4_status' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th className=\"text-left py-3 text-gray-400\">Analytics</th>\n                        <th className=\"text-left py-3 text-gray-400\">Laatste Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Volgende Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Status</th>\n                        <th className=\"text-left py-3 text-gray-400\">Opmerkingen</th>\n                        <th className=\"text-left py-3 text-gray-400\">Acties</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredAndSortedSubscriptions\n                        .filter(subscription => subscription.frequency === 'quarterly')\n                        .map((subscription) => (\n                          <ClientRow \n                            key={subscription.id} \n                            subscription={subscription}\n                            onEdit={handleEdit}\n                            onDelete={deleteSubscription}\n                            formatDate={formatDate}\n                            user={user}\n                            fetchSubscriptions={fetchSubscriptions}\n                          />\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeView === 'analytics' && renderAnalyticsView()}\n\n      {activeView === 'profile' && renderProfileView()}\n\n      {/* Edit Modal */}\n      {isEditModalOpen && editingSubscription && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card p-6 w-full max-w-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Klant Bewerken</h2>\n              <button\n                onClick={() => setIsEditModalOpen(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"flex space-x-4 mb-4 border-b border-gray-600\">\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  activeTab === \"general\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setActiveTab(\"general\")}\n              >\n                General\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  activeTab === \"hosting\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setActiveTab(\"hosting\")}\n              >\n                Hosting Gegevens\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  activeTab === \"database\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setActiveTab(\"database\")}\n              >\n                Database\n              </button>\n            </div>\n\n            {activeTab === \"general\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Klantnaam</label>\n                  <input\n                    type=\"text\"\n                    value={editingSubscription.client_name}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      client_name: e.target.value\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Frequentie</label>\n                  <select\n                    value={editingSubscription.frequency}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      frequency: e.target.value as 'monthly' | 'quarterly'\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"monthly\">Maandelijks</option>\n                    <option value=\"quarterly\">Per kwartaal</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">WordPress Thema</label>\n                  <input\n                    type=\"text\"\n                    value={editingSubscription.wp_theme || ''}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      wp_theme: e.target.value\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">PHP Versie</label>\n                  <input\n                    type=\"text\"\n                    value={editingSubscription.php_version || ''}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      php_version: e.target.value\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">GA4 Status</label>\n                  <select\n                    value={editingSubscription.ga4_status}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      ga4_status: e.target.value as 'yes' | 'no' | 'pending'\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"yes\">Ja</option>\n                    <option value=\"pending\">In behandeling</option>\n                    <option value=\"no\">Nee</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Analytics Check</label>\n                  <select\n                    value={editingSubscription.analytics_check ? 'true' : 'false'}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      analytics_check: e.target.value === 'true'\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"true\">Ja</option>\n                    <option value=\"false\">Nee</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Laatste Update</label>\n                  <input\n                    type=\"date\"\n                    value={editingSubscription.last_update ? new Date(editingSubscription.last_update).toISOString().split('T')[0] : ''}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      last_update: e.target.value ? new Date(e.target.value).toISOString() : null,\n                      next_update_due: e.target.value ? \n                        calculateNextUpdate({...editingSubscription, last_update: e.target.value}).toISOString() : null\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Volgende Update</label>\n                  <input\n                    type=\"date\"\n                    value={editingSubscription.next_update_due ? new Date(editingSubscription.next_update_due).toISOString().split('T')[0] : ''}\n                    disabled\n                    className=\"glass-input w-full px-4 py-2 rounded-lg opacity-50\"\n                  />\n                </div>\n\n                {/* Comments Section */}\n                <div className=\"col-span-2 mt-4\">\n                  <label className=\"block text-sm text-gray-400 mb-1\">Opmerkingen</label>\n                  <div className=\"space-y-2\">\n                    <textarea\n                      value={editingSubscription.comments || ''}\n                      onChange={(e) => setEditingSubscription({\n                        ...editingSubscription,\n                        comments: e.target.value\n                      })}\n                      className=\"glass-input w-full px-4 py-2 rounded-lg min-h-[100px] resize-y\"\n                      placeholder=\"Voeg hier je opmerkingen toe...\"\n                    />\n                    {editingSubscription.comment_updated_by && editingSubscription.comment_updated_at && (\n                      <p className=\"text-sm text-gray-400\">\n                        Laatste opmerking door {editingSubscription.comment_updated_by === user?.id ? 'jou' : 'een andere gebruiker'} op {formatDate(editingSubscription.comment_updated_at)}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === \"hosting\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={hostingDetails.host}\n                    onChange={(e) => setHostingDetails(prev => ({ ...prev, host: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Gebruikersnaam</label>\n                  <input\n                    type=\"text\"\n                    value={hostingDetails.username}\n                    onChange={(e) => setHostingDetails(prev => ({ ...prev, username: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Wachtwoord</label>\n                  <input\n                    type=\"password\"\n                    value={hostingDetails.password}\n                    onChange={(e) => setHostingDetails(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Poort</label>\n                  <input\n                    type=\"text\"\n                    value={hostingDetails.port}\n                    onChange={(e) => setHostingDetails(prev => ({ ...prev, port: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {activeTab === \"database\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={databaseDetails.host}\n                    onChange={(e) => setDatabaseDetails(prev => ({ ...prev, host: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Database Name</label>\n                  <input\n                    type=\"text\"\n                    value={databaseDetails.databaseName}\n                    onChange={(e) => setDatabaseDetails(prev => ({ ...prev, databaseName: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Database User</label>\n                  <input\n                    type=\"text\"\n                    value={databaseDetails.databaseUser}\n                    onChange={(e) => setDatabaseDetails(prev => ({ ...prev, databaseUser: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={databaseDetails.password}\n                    onChange={(e) => setDatabaseDetails(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Buttons */}\n            <div className=\"flex justify-end gap-4 mt-6\">\n              <button\n                onClick={() => setIsEditModalOpen(false)}\n                className=\"glass-button px-4 py-2 rounded-lg\"\n              >\n                Annuleren\n              </button>\n              <button\n                onClick={handleSave}\n                disabled={loading}\n                className=\"glass-button px-4 py-2 rounded-lg disabled:opacity-50\"\n              >\n                Wijzigingen Opslaan\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Updates Modal */}\n      {isUpdatesModalOpen && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card p-6 w-full max-w-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">\n                Updates voor {months[selectedMonth]}\n              </h2>\n              <button\n                onClick={() => setIsUpdatesModalOpen(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {getPendingUpdates().length === 0 ? (\n                <p className=\"text-gray-400\">Geen updates nodig voor deze maand.</p>\n              ) : (\n                getPendingUpdates().map((subscription) => (\n                  <div\n                    key={subscription.id}\n                    className=\"flex items-center justify-between p-4 bg-gray-800 rounded-lg\"\n                  >\n                    <div>\n                      <h3 className=\"font-semibold\">{subscription.client_name}</h3>\n                      <div className=\"space-y-1\">\n                        <p className=\"text-sm text-gray-400\">\n                          Volgende update: {formatDate(subscription.next_update_due)}\n                        </p>\n                        <p className=\"text-sm text-gray-400\">\n                          Type: {subscription.frequency === 'monthly' ? 'Maandelijks' : 'Kwartaal'}\n                        </p>\n                      </div>\n                    </div>\n                    <button\n                      onClick={() => markUpdateAsCompleted(subscription.id)}\n                      className=\"glass-button px-4 py-2 rounded-lg text-sm hover:bg-green-500/20 hover:text-green-400 transition-colors\"\n                    >\n                      Markeer als Voltooid\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Full Months Modal */}\n      {isMonthsModalOpen && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card p-6 w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Updates Overzicht - Alle Maanden</h2>\n              <button\n                onClick={() => setIsMonthsModalOpen(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"overflow-y-auto flex-grow pr-4 custom-scrollbar\">\n              <div className=\"grid grid-cols-2 gap-6\">\n                {months.map((month, index) => {\n                  const monthlySubscriptions = subscriptions.filter(s => {\n                    const nextUpdate = s.next_update_due ? new Date(s.next_update_due) : null;\n                    return nextUpdate && \n                           nextUpdate.getMonth() === index && \n                           s.frequency === 'monthly';\n                  });\n\n                  const quarterlySubscriptions = subscriptions.filter(s => {\n                    const nextUpdate = s.next_update_due ? new Date(s.next_update_due) : null;\n                    return nextUpdate && \n                           nextUpdate.getMonth() === index && \n                           s.frequency === 'quarterly';\n                  });\n\n                  const monthlyRequired = monthlySubscriptions.length;\n                  const quarterlyRequired = quarterlySubscriptions.length;\n                  const monthlyCompleted = monthlySubscriptions.filter(s => s.update_status === 'completed').length;\n                  const quarterlyCompleted = quarterlySubscriptions.filter(s => s.update_status === 'completed').length;\n                  const monthlyPercentage = monthlyRequired > 0 ? Math.round((monthlyCompleted / monthlyRequired) * 100) : 0;\n                  const quarterlyPercentage = quarterlyRequired > 0 ? Math.round((quarterlyCompleted / quarterlyRequired) * 100) : 0;\n\n                  return (\n                    <div key={month} className=\"card p-4 space-y-3\">\n                      <div className=\"text-lg text-white font-medium flex justify-between items-center\">\n                        <span>{month}</span>\n                        <span className=\"text-sm text-gray-400\">\n                          {monthlyRequired + quarterlyRequired} updates nodig\n                        </span>\n                      </div>\n                      {/* Monthly Progress */}\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-400\">\n                            Maandelijks ({monthlyCompleted}/{monthlyRequired})\n                          </span>\n                          <span className={`text-sm ${monthlyPercentage >= 70 ? 'text-green-500' : monthlyPercentage >= 30 ? 'text-yellow-500' : 'text-red-500'}`}>\n                            {monthlyPercentage}%\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                          <div \n                            className={`h-2 rounded-full transition-all duration-500 ${\n                              monthlyPercentage >= 70 ? 'bg-green-500' : \n                              monthlyPercentage >= 30 ? 'bg-yellow-500' : \n                              'bg-red-500'\n                            }`}\n                            style={{ width: `${monthlyPercentage}%` }}\n                          />\n                        </div>\n                      </div>\n                      {/* Quarterly Progress */}\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-400\">\n                            Kwartaal ({quarterlyCompleted}/{quarterlyRequired})\n                          </span>\n                          <span className={`text-sm ${quarterlyPercentage >= 70 ? 'text-green-500' : quarterlyPercentage >= 30 ? 'text-yellow-500' : 'text-red-500'}`}>\n                            {quarterlyPercentage}%\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                          <div \n                            className={`h-2 rounded-full transition-all duration-500 ${\n                              quarterlyPercentage >= 70 ? 'bg-green-500' : \n                              quarterlyPercentage >= 30 ? 'bg-yellow-500' : \n                              'bg-red-500'\n                            }`}\n                            style={{ width: `${quarterlyPercentage}%` }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* New Client Modal */}\n      {isNewClientModalOpen && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card p-6 w-full max-w-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Nieuwe Klant Toevoegen</h2>\n              <button\n                onClick={() => setIsNewClientModalOpen(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"flex space-x-4 mb-4 border-b border-gray-600\">\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  newClientActiveTab === \"general\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setNewClientActiveTab(\"general\")}\n              >\n                Algemeen\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  newClientActiveTab === \"hosting\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setNewClientActiveTab(\"hosting\")}\n              >\n                Hosting Gegevens\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 ${\n                  newClientActiveTab === \"database\" \n                    ? \"border-b-2 border-blue-500 text-blue-500\" \n                    : \"text-gray-400\"\n                }`}\n                onClick={() => setNewClientActiveTab(\"database\")}\n              >\n                Database\n              </button>\n            </div>\n\n            {newClientActiveTab === \"general\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Klantnaam</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.client_name}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, client_name: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Frequentie</label>\n                  <select\n                    value={newSubscription.frequency}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, frequency: e.target.value as 'monthly' | 'quarterly' }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"monthly\">Maandelijks</option>\n                    <option value=\"quarterly\">Per kwartaal</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">WordPress Thema</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.wp_theme}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, wp_theme: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">PHP Versie</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.php_version}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, php_version: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">GA4 Status</label>\n                  <select\n                    value={newSubscription.ga4_status}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, ga4_status: e.target.value as 'yes' | 'no' | 'pending' }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"yes\">Ja</option>\n                    <option value=\"pending\">In behandeling</option>\n                    <option value=\"no\">Nee</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Analytics Check</label>\n                  <select\n                    value={newSubscription.analytics_check ? 'true' : 'false'}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, analytics_check: e.target.value === 'true' }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  >\n                    <option value=\"true\">Ja</option>\n                    <option value=\"false\">Nee</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Laatste Update</label>\n                  <input\n                    type=\"date\"\n                    value={newSubscription.last_update ? new Date(newSubscription.last_update).toISOString().split('T')[0] : ''}\n                    onChange={(e) => setNewSubscription(prev => ({\n                      ...prev,\n                      last_update: e.target.value ? new Date(e.target.value).toISOString() : null\n                    }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n\n                <div className=\"col-span-2\">\n                  <label className=\"block text-sm text-gray-400 mb-1\">Opmerkingen</label>\n                  <textarea\n                    value={newSubscription.comments}\n                    onChange={(e) => setNewSubscription(prev => ({ ...prev, comments: e.target.value }))}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg min-h-[100px] resize-y\"\n                    placeholder=\"Voeg hier je opmerkingen toe...\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {newClientActiveTab === \"hosting\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.hosting_details?.host || ''}\n                    onChange={(e) => updateHostingDetails('host', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Gebruikersnaam</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.hosting_details?.username || ''}\n                    onChange={(e) => updateHostingDetails('username', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Wachtwoord</label>\n                  <input\n                    type=\"password\"\n                    value={newSubscription.hosting_details?.password || ''}\n                    onChange={(e) => updateHostingDetails('password', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Poort</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.hosting_details?.port || ''}\n                    onChange={(e) => updateHostingDetails('port', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {newClientActiveTab === \"database\" && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.database_details?.host || ''}\n                    onChange={(e) => updateDatabaseDetails('host', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Database Name</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.database_details?.databaseName || ''}\n                    onChange={(e) => updateDatabaseDetails('databaseName', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Database User</label>\n                  <input\n                    type=\"text\"\n                    value={newSubscription.database_details?.databaseUser || ''}\n                    onChange={(e) => updateDatabaseDetails('databaseUser', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-1\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={newSubscription.database_details?.password || ''}\n                    onChange={(e) => updateDatabaseDetails('password', e.target.value)}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Buttons */}\n            <div className=\"flex justify-end gap-4 mt-6\">\n              <button\n                onClick={() => setIsNewClientModalOpen(false)}\n                className=\"glass-button px-4 py-2 rounded-lg\"\n              >\n                Annuleren\n              </button>\n              <button\n                onClick={handleCreateClient}\n                disabled={loading || !newSubscription.client_name}\n                className=\"glass-button px-4 py-2 rounded-lg disabled:opacity-50\"\n              >\n                Klant Toevoegen\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Add the ClientRow component at the top of the file\ntype ClientRowProps = {\n  subscription: Subscription;\n  onEdit: (subscription: Subscription) => void;\n  onDelete: (id: string) => Promise<void>;\n  formatDate: (date: string | null) => string;\n  user: User | null;\n  fetchSubscriptions: () => Promise<void>;\n};\n\nconst ClientRow = ({ subscription, onEdit, onDelete, formatDate, user, fetchSubscriptions }: ClientRowProps) => (\n  <tr className=\"border-b border-gray-700 hover:bg-gray-800\">\n    <td className=\"py-3\">{subscription.client_name}</td>\n    <td className=\"py-3\">{subscription.wp_theme || '-'}</td>\n    <td className=\"py-3\">{subscription.php_version || '-'}</td>\n    <td className=\"py-3\">\n      <span className={`px-2 py-1 rounded-full text-xs ${\n        subscription.ga4_status === 'yes' ? 'bg-green-500/20 text-green-400' :\n        subscription.ga4_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n        'bg-red-500/20 text-red-400'\n      }`}>\n        {subscription.ga4_status === 'yes' ? 'Ja' : \n         subscription.ga4_status === 'pending' ? 'In behandeling' : 'Nee'}\n      </span>\n    </td>\n    <td className=\"py-3\">\n      {subscription.analytics_check ? \n        <span className=\"text-green-400\">✓</span> : \n        <span className=\"text-red-400\">×</span>\n      }\n    </td>\n    <td className=\"py-3\">{formatDate(subscription.last_update)}</td>\n    <td className=\"py-3\">{formatDate(subscription.next_update_due)}</td>\n    <td className=\"py-3\">\n      <span className={`px-2 py-1 rounded-full text-xs ${\n        subscription.update_status === 'completed' ? 'bg-green-500/20 text-green-400' :\n        subscription.update_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n        'bg-red-500/20 text-red-400'\n      }`}>\n        {subscription.update_status === 'completed' ? 'Voltooid' :\n         subscription.update_status === 'pending' ? 'In behandeling' :\n         subscription.update_status === 'overdue' ? 'Te laat' : 'In behandeling'}\n      </span>\n    </td>\n    <td className=\"py-3\">\n      {subscription.comments ? (\n        <div className=\"group relative\">\n          <span className=\"text-purple-400 cursor-help\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\n            </svg>\n          </span>\n          <div className=\"absolute left-0 bottom-full mb-2 hidden group-hover:block\">\n            <div className=\"bg-gray-800 text-sm p-2 rounded-lg shadow-lg max-w-xs\">\n              <p className=\"text-gray-300\">{subscription.comments}</p>\n              {subscription.comment_updated_by && subscription.comment_updated_at && (\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  Bijgewerkt op {formatDate(subscription.comment_updated_at)}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-gray-500\">-</span>\n      )}\n    </td>\n    <td className=\"py-3\">\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={() => onEdit(subscription)}\n          className=\"p-1.5 text-gray-400 hover:text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          title=\"Bewerken\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n        </button>\n        <button\n          onClick={async () => {\n            if (window.confirm('Weet je zeker dat je deze klant wilt verwijderen?')) {\n              await onDelete(subscription.id);\n              fetchSubscriptions();\n            }\n          }}\n          className=\"p-1.5 text-red-400 hover:text-red-300 rounded-lg hover:bg-red-400/10 transition-colors\"\n          title=\"Verwijderen\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n          </svg>\n        </button>\n      </div>\n    </td>\n  </tr>\n);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}