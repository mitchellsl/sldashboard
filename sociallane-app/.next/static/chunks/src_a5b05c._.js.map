{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitch/Desktop/sldashboard/sociallane-app/src/utils/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nexport type SubscriptionFrequency = 'monthly' | 'quarterly' | 'yearly';\nexport type GA4Status = 'yes' | 'yes - basic' | 'no' | 'pending';\n\n// Mapping for Dutch frequency values\nconst frequencyMapping: { [key: string]: SubscriptionFrequency } = {\n  'maandelijks': 'monthly',\n  'per maand': 'monthly',\n  'monthly': 'monthly',\n  'kwartaal': 'quarterly',\n  'per kwartaal': 'quarterly',\n  'quarterly': 'quarterly',\n  'jaarlijks': 'yearly',\n  'per jaar': 'yearly',\n  'yearly': 'yearly'\n};\n\n// Mapping for GA4 status values\nconst ga4StatusMapping: { [key: string]: GA4Status } = {\n  'ja': 'yes',\n  'yes': 'yes',\n  'ja - basic': 'yes - basic',\n  'yes - basic': 'yes - basic',\n  'nee': 'no',\n  'no': 'no',\n  'in behandeling': 'pending',\n  'pending': 'pending'\n};\n\nexport type Subscription = {\n  id: string;\n  client_name: string;\n  frequency: 'monthly' | 'quarterly';\n  wp_theme: string | null;\n  php_version: string | null;\n  ga4_status: 'yes' | 'no' | 'pending';\n  analytics_check: boolean;\n  last_update: string | null; // ISO date string\n  next_update_due: string | null; // ISO date string\n  update_status: 'completed' | 'pending' | 'overdue' | null;\n  updated_by: string | null;\n  comments: string | null;\n  comment_updated_at: string | null;\n  comment_updated_by: string | null;\n};\n\nexport type UserProfile = {\n  id: string;\n  user_id: string;\n  display_name: string;\n  email: string;\n  avatar_url: string | null;\n  updated_at: string;\n};\n\nfunction normalizeFrequency(value: string): SubscriptionFrequency {\n  const normalized = value?.toLowerCase().trim();\n  return frequencyMapping[normalized] || 'monthly';\n}\n\nfunction normalizeGA4Status(value: string): GA4Status {\n  const normalized = value?.toLowerCase().trim();\n  return ga4StatusMapping[normalized] || 'no';\n}\n\nfunction normalizeBoolean(value: any): boolean {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') {\n    const normalized = value.toLowerCase().trim();\n    return normalized === 'true' || \n           normalized === 'yes' || \n           normalized === 'ja' || \n           normalized === '1' || \n           normalized === 'x' ||\n           normalized === '✓' ||\n           normalized === '✔';\n  }\n  return false;\n}\n\nexport async function importExcelToSupabase(data: any[]): Promise<void> {\n  const { error } = await supabase\n    .from('subscriptions')\n    .insert(data.map(row => ({\n      client_name: row[0]?.trim() || 'Unknown Client',\n      frequency: normalizeFrequency(row[1]),\n      wp_theme: row[2]?.trim() || null,\n      php_version: row[3]?.toString().trim() || null,\n      ga4_status: normalizeGA4Status(row[4]),\n      analytics_check: normalizeBoolean(row[5]),\n      january: normalizeBoolean(row[6]),\n      february: normalizeBoolean(row[7]),\n      march: normalizeBoolean(row[8]),\n      april: normalizeBoolean(row[9]),\n      may: normalizeBoolean(row[10]),\n      june: normalizeBoolean(row[11]),\n      july: normalizeBoolean(row[12]),\n      august: normalizeBoolean(row[13]),\n      september: normalizeBoolean(row[14]),\n      october: normalizeBoolean(row[15]),\n      november: normalizeBoolean(row[16]),\n      december: normalizeBoolean(row[17]),\n      notes: row[18]?.toString().trim() || null\n    })));\n\n  if (error) throw error;\n}\n\nexport async function getSubscriptions() {\n  const { data, error } = await supabase\n    .from('subscriptions')\n    .select('*')\n    .order('client_name', { ascending: true });\n\n  if (error) throw error;\n  return data;\n}\n\nexport async function updateSubscription(id: string, updates: Partial<Subscription>) {\n  // Remove id from updates\n  const { id: _, ...updateData } = updates;\n\n  const { data, error } = await supabase\n    .from('subscriptions')\n    .update(updateData)\n    .eq('id', id)\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Supabase update error:', error);\n    throw new Error(`Failed to update subscription: ${error.message}`);\n  }\n\n  if (!data) {\n    throw new Error('No data returned after update');\n  }\n\n  return data;\n}\n\nexport async function deleteSubscription(id: string) {\n  const { error } = await supabase\n    .from('subscriptions')\n    .delete()\n    .eq('id', id);\n\n  if (error) throw error;\n}\n\nexport async function updateUserProfile(userId: string, updates: Partial<UserProfile>) {\n  // First check if profile exists\n  const { data: existingProfile } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single();\n\n  const profileData = {\n    user_id: userId,\n    ...(!existingProfile && {\n      display_name: '',\n      email: '',\n      avatar_url: null,\n    }),\n    ...updates,\n    updated_at: new Date().toISOString()\n  };\n\n  const { data, error } = await supabase\n    .from('profiles')\n    .upsert(profileData)\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Error updating profile:', error);\n    throw new Error(`Failed to update profile: ${error.message}`);\n  }\n\n  return data;\n}\n\nexport async function getUserProfile(userId: string) {\n  const { data, error } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single();\n\n  if (error) {\n    // If profile doesn't exist, return null instead of throwing\n    if (error.code === 'PGRST116') {\n      return null;\n    }\n    console.error('Error fetching profile:', error);\n    throw new Error(`Failed to fetch profile: ${error.message}`);\n  }\n\n  return data;\n}\n\nexport async function uploadAvatar(userId: string, file: File) {\n  try {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${userId}-${Math.random()}.${fileExt}`;\n    const filePath = `avatars/${fileName}`;\n\n    const { error: uploadError } = await supabase.storage\n      .from('avatars')\n      .upload(filePath, file);\n\n    if (uploadError) {\n      throw uploadError;\n    }\n\n    const { data: { publicUrl } } = supabase.storage\n      .from('avatars')\n      .getPublicUrl(filePath);\n\n    await updateUserProfile(userId, { avatar_url: publicUrl });\n\n    return publicUrl;\n  } catch (error) {\n    console.error(`Error uploading avatar: ${error}`);\n    throw new Error('Failed to upload avatar. Please try again.');\n  }\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitch/Desktop/sldashboard/sociallane-app/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { Subscription, getSubscriptions, updateSubscription, deleteSubscription } from '@/utils/supabase';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { UserProfile, getUserProfile, updateUserProfile, uploadAvatar } from '@/utils/supabase';\nimport { User } from '@supabase/supabase-js';\n\ntype SortField = 'client_name' | 'frequency' | 'wp_theme' | 'php_version' | 'ga4_status';\ntype SortDirection = 'asc' | 'desc';\n\ntype UpdateHistory = {\n  client_name: string;\n  last_update: string;\n  updated_by: string;\n  frequency: 'monthly' | 'quarterly';\n  update_status: 'completed' | 'pending' | 'overdue';\n};\n\nexport default function Home() {\n  const [subscriptions, setSubscriptions] = useState<Subscription[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [activeView, setActiveView] = useState('overview');\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  \n  // Add new state for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortField, setSortField] = useState<SortField>('client_name');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [editingSubscription, setEditingSubscription] = useState<Subscription | null>(null);\n  const [originalSubscription, setOriginalSubscription] = useState<Subscription | null>(null);\n  const { signOut, user } = useAuth();\n\n  // Add new state for analytics\n  const [updateHistory, setUpdateHistory] = useState<UpdateHistory[]>([]);\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'week' | 'month' | 'year'>('month');\n\n  // Add new state for user profile\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [isProfileLoading, setIsProfileLoading] = useState(false);\n  const [profileError, setProfileError] = useState<string | null>(null);\n\n  // Add new state for table collapse\n  const [isMonthlyCollapsed, setIsMonthlyCollapsed] = useState(false);\n  const [isQuarterlyCollapsed, setIsQuarterlyCollapsed] = useState(false);\n\n  useEffect(() => {\n    fetchSubscriptions();\n    if (user) {\n      fetchUserProfile();\n    }\n  }, [user]);\n\n  // Add sort function\n  const handleSort = (field: SortField) => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Add filter and sort logic\n  const filteredAndSortedSubscriptions = subscriptions\n    .filter(subscription => {\n      const searchLower = searchTerm.toLowerCase();\n      return (\n        subscription.client_name.toLowerCase().includes(searchLower) ||\n        subscription.frequency.toLowerCase().includes(searchLower) ||\n        subscription.wp_theme?.toLowerCase().includes(searchLower) ||\n        subscription.php_version?.toLowerCase().includes(searchLower) ||\n        subscription.ga4_status.toLowerCase().includes(searchLower)\n      );\n    })\n    .sort((a, b) => {\n      const aValue = a[sortField] || '';\n      const bValue = b[sortField] || '';\n      const compareResult = aValue.localeCompare(bValue);\n      return sortDirection === 'asc' ? compareResult : -compareResult;\n    });\n\n  // Add function to calculate update status\n  const calculateUpdateStatus = (subscription: Subscription) => {\n    const today = new Date();\n    const lastUpdate = subscription.last_update ? new Date(subscription.last_update) : null;\n    const nextDue = subscription.next_update_due ? new Date(subscription.next_update_due) : null;\n\n    if (!lastUpdate || !nextDue) return 'pending';\n    if (nextDue < today) return 'overdue';\n    if (lastUpdate <= nextDue) return 'completed';\n    return 'pending';\n  };\n\n  // Add function to get next update date\n  const calculateNextUpdate = (subscription: Subscription) => {\n    const today = new Date();\n    const lastUpdate = subscription.last_update ? new Date(subscription.last_update) : today;\n    \n    if (subscription.frequency === 'monthly') {\n      return new Date(lastUpdate.setMonth(lastUpdate.getMonth() + 1));\n    } else {\n      return new Date(lastUpdate.setMonth(lastUpdate.getMonth() + 3));\n    }\n  };\n\n  // Add function to format date\n  const formatDate = (date: Date | string | null) => {\n    if (!date) return '-';\n    return new Date(date).toLocaleDateString('nl-NL', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  async function fetchSubscriptions() {\n    try {\n      const data = await getSubscriptions();\n      setSubscriptions(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch subscriptions');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleFileUpload(event: React.ChangeEvent<HTMLInputElement>) {\n    const file = event.target.files?.[0];\n    if (!file) return;\n    setSelectedFile(file);\n  }\n\n  async function handleImport() {\n    if (!selectedFile) return;\n\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      const response = await fetch('/api/import', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) throw new Error('Import failed');\n      await fetchSubscriptions();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Import failed');\n    } finally {\n      setLoading(false);\n      setSelectedFile(null);\n    }\n  }\n\n  // Add edit handler\n  const handleEdit = (subscription: Subscription) => {\n    setOriginalSubscription(subscription);\n    setEditingSubscription(subscription);\n    setIsEditModalOpen(true);\n  };\n\n  // Modify handleSave to include update tracking\n  const handleSave = async () => {\n    if (!editingSubscription || !originalSubscription) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const now = new Date();\n      const updates: Partial<Subscription> = {\n        ...editingSubscription,\n        last_update: now.toISOString(),\n        next_update_due: calculateNextUpdate(editingSubscription).toISOString(),\n        update_status: 'completed' as const,\n        updated_by: user?.id || null,\n        // Only update comment-related fields if the comment has changed\n        ...(editingSubscription.comments !== originalSubscription.comments && {\n          comment_updated_at: now.toISOString(),\n          comment_updated_by: user?.id || null\n        })\n      };\n      \n      const updatedSubscription = await updateSubscription(updates.id!, updates);\n      \n      setSubscriptions(prevSubscriptions => \n        prevSubscriptions.map(sub => \n          sub.id === updatedSubscription.id ? updatedSubscription : sub\n        )\n      );\n      \n      setIsEditModalOpen(false);\n      setEditingSubscription(null);\n      setOriginalSubscription(null);\n    } catch (err) {\n      console.error('Save error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update subscription');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add analytics content\n  const renderAnalyticsView = () => {\n    const getTimeframeLabel = () => {\n      switch (selectedTimeframe) {\n        case 'week': return 'This Week';\n        case 'month': return 'This Month';\n        case 'year': return 'This Year';\n      }\n    };\n\n    const totalUpdates = subscriptions.filter(s => s.last_update).length;\n    const completedUpdates = subscriptions.filter(s => s.update_status === 'completed').length;\n    const pendingUpdates = subscriptions.filter(s => s.update_status === 'pending').length;\n    const overdueUpdates = subscriptions.filter(s => s.update_status === 'overdue').length;\n\n    return (\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Update Statistics Card */}\n        <div className=\"card p-6 lg:col-span-2\">\n          <h2 className=\"text-lg font-semibold mb-6\">Update Statistics</h2>\n          <div className=\"grid grid-cols-4 gap-4\">\n            <div className=\"bg-gray-800 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold\">{totalUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Total Updates</div>\n            </div>\n            <div className=\"bg-green-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-green-400\">{completedUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Completed</div>\n            </div>\n            <div className=\"bg-yellow-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-yellow-400\">{pendingUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Pending</div>\n            </div>\n            <div className=\"bg-red-500/20 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-red-400\">{overdueUpdates}</div>\n              <div className=\"text-gray-400 text-sm\">Overdue</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Update Timeline */}\n        <div className=\"card p-6 lg:col-span-2\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-lg font-semibold\">Update Timeline</h2>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => setSelectedTimeframe('week')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'week' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Week\n              </button>\n              <button\n                onClick={() => setSelectedTimeframe('month')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'month' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Month\n              </button>\n              <button\n                onClick={() => setSelectedTimeframe('year')}\n                className={`px-3 py-1 rounded-lg ${\n                  selectedTimeframe === 'year' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-400'\n                }`}\n              >\n                Year\n              </button>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"border-b border-gray-700\">\n                <tr>\n                  <th className=\"text-left py-3 text-gray-400\">Client</th>\n                  <th className=\"text-left py-3 text-gray-400\">Last Update</th>\n                  <th className=\"text-left py-3 text-gray-400\">Updated By</th>\n                  <th className=\"text-left py-3 text-gray-400\">Frequency</th>\n                  <th className=\"text-left py-3 text-gray-400\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {subscriptions\n                  .filter(s => s.last_update)\n                  .sort((a, b) => new Date(b.last_update!).getTime() - new Date(a.last_update!).getTime())\n                  .map((subscription) => (\n                    <tr key={subscription.id} className=\"border-b border-gray-700\">\n                      <td className=\"py-3\">{subscription.client_name}</td>\n                      <td className=\"py-3\">{formatDate(subscription.last_update)}</td>\n                      <td className=\"py-3\">\n                        <div className=\"flex items-center gap-2\">\n                          {subscription.updated_by && (\n                            <>\n                              <img \n                                src={subscription.updated_by === user?.id && userProfile?.avatar_url ? userProfile.avatar_url : '/default-avatar.svg'} \n                                alt=\"User Avatar\"\n                                className=\"w-6 h-6 rounded-full bg-gray-700\"\n                              />\n                              <span>\n                                {subscription.updated_by === user?.id && userProfile\n                                  ? userProfile.display_name\n                                  : 'Admin'}\n                              </span>\n                            </>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"py-3\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          subscription.frequency === 'monthly' ? 'bg-purple-500/20 text-purple-400' : 'bg-yellow-500/20 text-yellow-400'\n                        }`}>\n                          {subscription.frequency}\n                        </span>\n                      </td>\n                      <td className=\"py-3\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          subscription.update_status === 'completed' ? 'bg-green-500/20 text-green-400' :\n                          subscription.update_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n                          'bg-red-500/20 text-red-400'\n                        }`}>\n                          {subscription.update_status || 'pending'}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Replace settings view with profile view\n  const renderProfileView = () => {\n    if (isProfileLoading) return <div className=\"flex items-center justify-center\">Loading profile...</div>;\n    if (!userProfile) return <div className=\"flex items-center justify-center\">No profile found</div>;\n\n    return (\n      <div className=\"card p-6 max-w-2xl mx-auto\">\n        <h2 className=\"text-lg font-semibold mb-6\">Profile Settings</h2>\n        \n        {profileError && (\n          <div className=\"bg-red-500/20 text-red-400 p-4 rounded-lg mb-6\">\n            {profileError}\n          </div>\n        )}\n\n        <div className=\"space-y-6\">\n          {/* Avatar Upload */}\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <img\n                src={userProfile.avatar_url || '/default-avatar.png'}\n                alt={userProfile.display_name || 'Profile'}\n                className=\"w-20 h-20 rounded-full object-cover\"\n              />\n              <label\n                htmlFor=\"avatar-upload\"\n                className=\"absolute bottom-0 right-0 bg-purple-500 p-1 rounded-full cursor-pointer hover:bg-purple-600 transition-colors\"\n              >\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                <input\n                  type=\"file\"\n                  id=\"avatar-upload\"\n                  accept=\"image/*\"\n                  onChange={handleAvatarUpload}\n                  className=\"hidden\"\n                />\n              </label>\n            </div>\n            <div>\n              <h3 className=\"font-medium\">Profile Picture</h3>\n              <p className=\"text-sm text-gray-400\">Click the plus icon to upload a new photo</p>\n            </div>\n          </div>\n\n          {/* Display Name */}\n          <div>\n            <label className=\"block text-sm text-gray-400 mb-1\">Display Name</label>\n            <input\n              type=\"text\"\n              value={userProfile.display_name}\n              onChange={(e) => handleProfileUpdate({ display_name: e.target.value })}\n              className=\"w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-700 focus:outline-none focus:border-purple-500\"\n              placeholder=\"Enter your display name\"\n            />\n          </div>\n\n          {/* Email */}\n          <div>\n            <label className=\"block text-sm text-gray-400 mb-1\">Email Address</label>\n            <input\n              type=\"email\"\n              value={userProfile.email}\n              onChange={(e) => handleProfileUpdate({ email: e.target.value })}\n              className=\"w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-700 focus:outline-none focus:border-purple-500\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n\n          <div className=\"pt-4\">\n            <p className=\"text-sm text-gray-400\">\n              Last updated: {formatDate(userProfile.updated_at)}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const fetchUserProfile = async () => {\n    if (!user) return;\n    \n    try {\n      setIsProfileLoading(true);\n      const profile = await getUserProfile(user.id);\n      setUserProfile(profile || {\n        user_id: user.id,\n        display_name: '',\n        email: user.email || '',\n        avatar_url: null,\n        updated_at: new Date().toISOString()\n      });\n    } catch (err) {\n      console.error('Error fetching profile:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to fetch profile');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  const handleProfileUpdate = async (updates: Partial<UserProfile>) => {\n    if (!user) return;\n    \n    try {\n      setIsProfileLoading(true);\n      setProfileError(null);\n      const updatedProfile = await updateUserProfile(user.id, updates);\n      setUserProfile(updatedProfile);\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to update profile');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  const handleAvatarUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!user || !event.target.files?.[0]) return;\n    \n    try {\n      setIsProfileLoading(true);\n      setProfileError(null);\n      const file = event.target.files[0];\n      const avatarUrl = await uploadAvatar(user.id, file);\n      setUserProfile(prev => prev ? { ...prev, avatar_url: avatarUrl } : null);\n    } catch (err) {\n      console.error('Error uploading avatar:', err);\n      setProfileError(err instanceof Error ? err.message : 'Failed to upload avatar');\n    } finally {\n      setIsProfileLoading(false);\n    }\n  };\n\n  if (loading) return <div className=\"flex items-center justify-center min-h-screen\">Loading...</div>;\n  if (error) return <div className=\"flex items-center justify-center min-h-screen text-red-500\">Error: {error}</div>;\n\n  const monthlyClients = subscriptions.filter(s => s.frequency === 'monthly').length;\n  const quarterlyClients = subscriptions.filter(s => s.frequency === 'quarterly').length;\n  const totalClients = monthlyClients + quarterlyClients;\n\n  return (\n    <div className=\"min-h-screen bg-[#0F1115] text-white p-6\">\n      {/* Header */}\n      <header className=\"flex justify-between items-center mb-8 card p-4\">\n        <div className=\"text-2xl font-bold\">Sociallane Dashboard</div>\n        <div className=\"flex items-center gap-6\">\n          <nav className=\"flex space-x-4\">\n            <button \n              className={`nav-item ${activeView === 'overview' ? 'active' : ''}`}\n              onClick={() => setActiveView('overview')}\n            >\n              Overzicht\n            </button>\n            <button \n              className={`nav-item ${activeView === 'analytics' ? 'active' : ''}`}\n              onClick={() => setActiveView('analytics')}\n            >\n              Analyses\n            </button>\n            <button \n              className={`nav-item ${activeView === 'profile' ? 'active' : ''}`}\n              onClick={() => setActiveView('profile')}\n            >\n              Profiel\n            </button>\n          </nav>\n          {userProfile?.avatar_url && (\n            <img\n              src={userProfile.avatar_url}\n              alt={userProfile.display_name}\n              className=\"w-8 h-8 rounded-full ring-2 ring-purple-500/30\"\n            />\n          )}\n          <button\n            onClick={signOut}\n            className=\"glass-button px-4 py-2 rounded-lg\"\n          >\n            Uitloggen\n          </button>\n        </div>\n      </header>\n\n      {/* Content based on active view */}\n      {activeView === 'overview' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Calendar Card */}\n          <div className=\"card p-6\">\n            <div className=\"grid grid-cols-7 gap-2\">\n              {months.map((month, index) => (\n                <button\n                  key={month}\n                  className={`p-2 rounded-lg text-center ${\n                    selectedMonth === index \n                      ? 'bg-purple-500 text-white' \n                      : 'hover:bg-gray-700'\n                  }`}\n                  onClick={() => setSelectedMonth(index)}\n                >\n                  {month}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Client Distribution */}\n          <div className=\"card p-6\">\n            <h2 className=\"text-lg font-semibold mb-6\">Abonnementsverdeling</h2>\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Maandelijks</span>\n                  <span className=\"text-sm text-purple-500\">{Math.round(monthlyClients/totalClients*100)}%</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div \n                    className=\"bg-purple-500 h-2 rounded-full transition-all duration-500\"\n                    style={{ width: `${Math.round(monthlyClients/totalClients*100)}%` }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Per kwartaal</span>\n                  <span className=\"text-sm text-yellow-500\">{Math.round(quarterlyClients/totalClients*100)}%</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div \n                    className=\"bg-yellow-500 h-2 rounded-full transition-all duration-500\"\n                    style={{ width: `${Math.round(quarterlyClients/totalClients*100)}%` }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-4 flex justify-between text-sm text-gray-400\">\n                <div>Totaal klanten: {totalClients}</div>\n                <div className=\"flex gap-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                    <span>{monthlyClients} Maandelijks</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                    <span>{quarterlyClients} Per kwartaal</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Client Tables */}\n          <div className=\"card p-6 lg:col-span-2\">\n            <div className=\"flex flex-col gap-8\">\n              {/* Common Header with Search and Import */}\n              <div className=\"flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold\">Alle Klanten</h2>\n                <div className=\"flex gap-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Zoek klanten...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"glass-input px-4 py-2 rounded-lg\"\n                  />\n                  <input\n                    type=\"file\"\n                    accept=\".xlsx,.xls\"\n                    onChange={handleFileUpload}\n                    className=\"hidden\"\n                    id=\"file-upload\"\n                  />\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"glass-button px-4 py-2 rounded-lg cursor-pointer\"\n                  >\n                    Importeer Excel\n                  </label>\n                  {selectedFile && (\n                    <button\n                      onClick={handleImport}\n                      disabled={loading}\n                      className=\"glass-button px-4 py-2 rounded-lg disabled:opacity-50\"\n                    >\n                      Uploaden\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Monthly Clients Table */}\n              <div>\n                <h3 \n                  className=\"text-lg font-semibold mb-4 flex items-center gap-2 cursor-pointer select-none\"\n                  onClick={() => setIsMonthlyCollapsed(!isMonthlyCollapsed)}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                    <span>Maandelijkse Klanten ({filteredAndSortedSubscriptions.filter(s => s.frequency === 'monthly').length})</span>\n                  </div>\n                  <svg \n                    className={`w-5 h-5 transition-transform ${isMonthlyCollapsed ? '-rotate-90' : ''}`} \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </h3>\n                <div className={`overflow-x-auto transition-all duration-300 ${isMonthlyCollapsed ? 'hidden' : 'block'}`}>\n                  <table className=\"w-full\">\n                    <thead className=\"border-b border-gray-700\">\n                      <tr>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('client_name')}\n                        >\n                          Klantnaam {sortField === 'client_name' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('wp_theme')}\n                        >\n                          WP Thema {sortField === 'wp_theme' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('php_version')}\n                        >\n                          PHP Versie {sortField === 'php_version' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('ga4_status')}\n                        >\n                          GA4 {sortField === 'ga4_status' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th className=\"text-left py-3 text-gray-400\">Analytics</th>\n                        <th className=\"text-left py-3 text-gray-400\">Laatste Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Volgende Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Status</th>\n                        <th className=\"text-left py-3 text-gray-400\">Opmerkingen</th>\n                        <th className=\"text-left py-3 text-gray-400\">Acties</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredAndSortedSubscriptions\n                        .filter(subscription => subscription.frequency === 'monthly')\n                        .map((subscription) => (\n                          <ClientRow \n                            key={subscription.id} \n                            subscription={subscription}\n                            onEdit={handleEdit}\n                            onDelete={deleteSubscription}\n                            formatDate={formatDate}\n                            user={user}\n                            fetchSubscriptions={fetchSubscriptions}\n                          />\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Quarterly Clients Table */}\n              <div>\n                <h3 \n                  className=\"text-lg font-semibold mb-4 flex items-center gap-2 cursor-pointer select-none\"\n                  onClick={() => setIsQuarterlyCollapsed(!isQuarterlyCollapsed)}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                    <span>Kwartaal Klanten ({filteredAndSortedSubscriptions.filter(s => s.frequency === 'quarterly').length})</span>\n                  </div>\n                  <svg \n                    className={`w-5 h-5 transition-transform ${isQuarterlyCollapsed ? '-rotate-90' : ''}`} \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </h3>\n                <div className={`overflow-x-auto transition-all duration-300 ${isQuarterlyCollapsed ? 'hidden' : 'block'}`}>\n                  <table className=\"w-full\">\n                    <thead className=\"border-b border-gray-700\">\n                      <tr>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('client_name')}\n                        >\n                          Klantnaam {sortField === 'client_name' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('wp_theme')}\n                        >\n                          WP Thema {sortField === 'wp_theme' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('php_version')}\n                        >\n                          PHP Versie {sortField === 'php_version' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th \n                          className=\"text-left py-3 text-gray-400 cursor-pointer hover:text-white\"\n                          onClick={() => handleSort('ga4_status')}\n                        >\n                          GA4 {sortField === 'ga4_status' && (sortDirection === 'asc' ? '↑' : '↓')}\n                        </th>\n                        <th className=\"text-left py-3 text-gray-400\">Analytics</th>\n                        <th className=\"text-left py-3 text-gray-400\">Laatste Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Volgende Update</th>\n                        <th className=\"text-left py-3 text-gray-400\">Status</th>\n                        <th className=\"text-left py-3 text-gray-400\">Opmerkingen</th>\n                        <th className=\"text-left py-3 text-gray-400\">Acties</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredAndSortedSubscriptions\n                        .filter(subscription => subscription.frequency === 'quarterly')\n                        .map((subscription) => (\n                          <ClientRow \n                            key={subscription.id} \n                            subscription={subscription}\n                            onEdit={handleEdit}\n                            onDelete={deleteSubscription}\n                            formatDate={formatDate}\n                            user={user}\n                            fetchSubscriptions={fetchSubscriptions}\n                          />\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeView === 'analytics' && renderAnalyticsView()}\n\n      {activeView === 'profile' && renderProfileView()}\n\n      {/* Edit Modal */}\n      {isEditModalOpen && editingSubscription && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card p-6 w-full max-w-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-semibold\">Klant Bewerken</h2>\n              <button\n                onClick={() => setIsEditModalOpen(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">Klantnaam</label>\n                <input\n                  type=\"text\"\n                  value={editingSubscription.client_name}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    client_name: e.target.value\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">Frequentie</label>\n                <select\n                  value={editingSubscription.frequency}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    frequency: e.target.value as 'monthly' | 'quarterly'\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                >\n                  <option value=\"monthly\">Maandelijks</option>\n                  <option value=\"quarterly\">Per kwartaal</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">WordPress Thema</label>\n                <input\n                  type=\"text\"\n                  value={editingSubscription.wp_theme || ''}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    wp_theme: e.target.value\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">PHP Versie</label>\n                <input\n                  type=\"text\"\n                  value={editingSubscription.php_version || ''}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    php_version: e.target.value\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">GA4 Status</label>\n                <select\n                  value={editingSubscription.ga4_status}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    ga4_status: e.target.value as 'yes' | 'no' | 'pending'\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                >\n                  <option value=\"yes\">Ja</option>\n                  <option value=\"pending\">In behandeling</option>\n                  <option value=\"no\">Nee</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">Analytics Check</label>\n                <select\n                  value={editingSubscription.analytics_check ? 'true' : 'false'}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    analytics_check: e.target.value === 'true'\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                >\n                  <option value=\"true\">Ja</option>\n                  <option value=\"false\">Nee</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">Laatste Update</label>\n                <input\n                  type=\"date\"\n                  value={editingSubscription.last_update ? new Date(editingSubscription.last_update).toISOString().split('T')[0] : ''}\n                  onChange={(e) => setEditingSubscription({\n                    ...editingSubscription,\n                    last_update: e.target.value ? new Date(e.target.value).toISOString() : null,\n                    next_update_due: e.target.value ? \n                      calculateNextUpdate({...editingSubscription, last_update: e.target.value}).toISOString() : null\n                  })}\n                  className=\"glass-input w-full px-4 py-2 rounded-lg\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm text-gray-400 mb-1\">Volgende Update</label>\n                <input\n                  type=\"date\"\n                  value={editingSubscription.next_update_due ? new Date(editingSubscription.next_update_due).toISOString().split('T')[0] : ''}\n                  disabled\n                  className=\"glass-input w-full px-4 py-2 rounded-lg opacity-50\"\n                />\n              </div>\n\n              {/* Comments Section */}\n              <div className=\"col-span-2 mt-4\">\n                <label className=\"block text-sm text-gray-400 mb-1\">Opmerkingen</label>\n                <div className=\"space-y-2\">\n                  <textarea\n                    value={editingSubscription.comments || ''}\n                    onChange={(e) => setEditingSubscription({\n                      ...editingSubscription,\n                      comments: e.target.value\n                    })}\n                    className=\"glass-input w-full px-4 py-2 rounded-lg min-h-[100px] resize-y\"\n                    placeholder=\"Voeg hier je opmerkingen toe...\"\n                  />\n                  {editingSubscription.comment_updated_by && editingSubscription.comment_updated_at && (\n                    <p className=\"text-sm text-gray-400\">\n                      Laatste opmerking door {editingSubscription.comment_updated_by === user?.id ? 'jou' : 'een andere gebruiker'} op {formatDate(editingSubscription.comment_updated_at)}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {/* Buttons */}\n              <div className=\"col-span-2 flex justify-end gap-4 mt-6\">\n                <button\n                  onClick={() => setIsEditModalOpen(false)}\n                  className=\"glass-button px-4 py-2 rounded-lg\"\n                >\n                  Annuleren\n                </button>\n                <button\n                  onClick={handleSave}\n                  disabled={loading}\n                  className=\"glass-button px-4 py-2 rounded-lg disabled:opacity-50\"\n                >\n                  Wijzigingen Opslaan\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Add the ClientRow component at the top of the file\ntype ClientRowProps = {\n  subscription: Subscription;\n  onEdit: (subscription: Subscription) => void;\n  onDelete: (id: string) => Promise<void>;\n  formatDate: (date: string | null) => string;\n  user: User | null;\n  fetchSubscriptions: () => Promise<void>;\n};\n\nconst ClientRow = ({ subscription, onEdit, onDelete, formatDate, user, fetchSubscriptions }: ClientRowProps) => (\n  <tr className=\"border-b border-gray-700 hover:bg-gray-800\">\n    <td className=\"py-3\">{subscription.client_name}</td>\n    <td className=\"py-3\">{subscription.wp_theme || '-'}</td>\n    <td className=\"py-3\">{subscription.php_version || '-'}</td>\n    <td className=\"py-3\">\n      <span className={`px-2 py-1 rounded-full text-xs ${\n        subscription.ga4_status === 'yes' ? 'bg-green-500/20 text-green-400' :\n        subscription.ga4_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n        'bg-red-500/20 text-red-400'\n      }`}>\n        {subscription.ga4_status === 'yes' ? 'Ja' : \n         subscription.ga4_status === 'pending' ? 'In behandeling' : 'Nee'}\n      </span>\n    </td>\n    <td className=\"py-3\">\n      {subscription.analytics_check ? \n        <span className=\"text-green-400\">✓</span> : \n        <span className=\"text-red-400\">×</span>\n      }\n    </td>\n    <td className=\"py-3\">{formatDate(subscription.last_update)}</td>\n    <td className=\"py-3\">{formatDate(subscription.next_update_due)}</td>\n    <td className=\"py-3\">\n      <span className={`px-2 py-1 rounded-full text-xs ${\n        subscription.update_status === 'completed' ? 'bg-green-500/20 text-green-400' :\n        subscription.update_status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :\n        'bg-red-500/20 text-red-400'\n      }`}>\n        {subscription.update_status === 'completed' ? 'Voltooid' :\n         subscription.update_status === 'pending' ? 'In behandeling' :\n         subscription.update_status === 'overdue' ? 'Te laat' : 'In behandeling'}\n      </span>\n    </td>\n    <td className=\"py-3\">\n      {subscription.comments ? (\n        <div className=\"group relative\">\n          <span className=\"text-purple-400 cursor-help\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\n            </svg>\n          </span>\n          <div className=\"absolute left-0 bottom-full mb-2 hidden group-hover:block\">\n            <div className=\"bg-gray-800 text-sm p-2 rounded-lg shadow-lg max-w-xs\">\n              <p className=\"text-gray-300\">{subscription.comments}</p>\n              {subscription.comment_updated_by && subscription.comment_updated_at && (\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  Bijgewerkt op {formatDate(subscription.comment_updated_at)}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-gray-500\">-</span>\n      )}\n    </td>\n    <td className=\"py-3\">\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={() => onEdit(subscription)}\n          className=\"p-1.5 text-gray-400 hover:text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          title=\"Bewerken\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n        </button>\n        <button\n          onClick={async () => {\n            if (window.confirm('Weet je zeker dat je deze klant wilt verwijderen?')) {\n              await onDelete(subscription.id);\n              fetchSubscriptions();\n            }\n          }}\n          className=\"p-1.5 text-red-400 hover:text-red-300 rounded-lg hover:bg-red-400/10 transition-colors\"\n          title=\"Verwijderen\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n          </svg>\n        </button>\n      </div>\n    </td>\n  </tr>\n);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}