{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitch/Desktop/Backup%20Dashboard/sociallane-update-dashboard/sociallane-app/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport { createBrowserClient } from '@supabase/ssr';\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { User } from '@supabase/supabase-js';\nimport { useRouter } from 'next/navigation';\n\ntype AuthContextType = {\n  user: User | null;\n  loading: boolean;\n  signOut: () => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  signOut: async () => {},\n});\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  const supabase = createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state (sign in, sign out, etc.)\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    router.push('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AAHA;AAuBI;;;AAzBJ;;;;AAaA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,SAAS;IACT,SAAS,WAAa;AACxB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;IAKnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,0CAA0C;YAC1C,SAAS,IAAI,CAAC,UAAU,GAAG,IAAI;0CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE;oBACpD,QAAQ,SAAS,QAAQ;oBACzB,WAAW;gBACb;;YAEA,6DAA6D;YAC7D,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB;0CAAC,CAAC,QAAQ;oBAC1E,QAAQ,SAAS,QAAQ;oBACzB,WAAW;gBACb;;YAEA;0CAAO,IAAM,aAAa,WAAW;;QACvC;iCAAG,EAAE;IAEL,MAAM,UAAU;QACd,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAQ;kBACnD;;;;;;AAGP;GApCgB;;QAGC,qIAAA,CAAA,YAAS;;;KAHV;AAsCT,MAAM,UAAU;;IACrB,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACpB;IAFa"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}